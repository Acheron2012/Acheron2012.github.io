{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/yilia/source/main.0cf68a.css","path":"main.0cf68a.css","modified":0,"renderable":1},{"_id":"themes/yilia/source/slider.e37972.js","path":"slider.e37972.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/main.0cf68a.js","path":"main.0cf68a.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/mobile.992cbe.js","path":"mobile.992cbe.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","path":"fonts/default-skin.b257fa.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","path":"fonts/iconfont.16acc2.ttf","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","path":"fonts/iconfont.45d7ee.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","path":"fonts/iconfont.b322fa.eot","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","path":"fonts/iconfont.8c627f.woff","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","path":"fonts/tooltip.4004ff.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/default-skin.png","path":"img/default-skin.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/preloader.gif","path":"img/preloader.gif","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515837274682},{"_id":"source/README.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515837290355},{"_id":"themes/yilia/.babelrc","hash":"db600d40e93e6d8023737a65d58d3be7370e5e30","modified":1515836773992},{"_id":"themes/yilia/.eslintignore","hash":"ed9d8911ca08c3dd5072c48dd0be4d06f8897730","modified":1515836773995},{"_id":"themes/yilia/.editorconfig","hash":"daaa8757fac18f8735fadd0a37a42c06f421ca14","modified":1515836773994},{"_id":"themes/yilia/.eslintrc.js","hash":"303d25adf02ad65720e537a16a4a137d14bb755f","modified":1515836773997},{"_id":"themes/yilia/.gitattributes","hash":"758cfbecfa7919e99abddf3297f37cde7e3d8d4e","modified":1515836773998},{"_id":"themes/yilia/.gitignore","hash":"d5fc575329853ff620b50fc62ad4b18fa09a308a","modified":1515836773999},{"_id":"themes/yilia/README.md","hash":"1bf755806af9d8874bd22e1abbdaaa24328ef4dc","modified":1515836774000},{"_id":"themes/yilia/_config.yml","hash":"0d2c3ac67b32b8228c256104ccc431c918eead34","modified":1515836774002},{"_id":"themes/yilia/package.json","hash":"ee6aa61f1cb89fd549e3e087c0232207a9c9ee30","modified":1515836774060},{"_id":"themes/yilia/webpack.config.js","hash":"da7657347109ddb4ab8602b219778117254677fe","modified":1515836774159},{"_id":"source/_posts/2018-01-12-windows上-tensorflow-gpu.md","hash":"46b95b93347e2cea33911d8152f8814f3eeec223","modified":1515853330028},{"_id":"source/_posts/2018-01-14-hexo-github-storage.md","hash":"a73b0edc11d2abed0b24da857a2b841011838764","modified":1515921562300},{"_id":"source/_posts/2018-01-14-mysql-remote-connection.md","hash":"5a6128d62b6a8a47e3e60b599e35c47f0bbb2511","modified":1515914104481},{"_id":"source/_posts/2018-01-14-texlive-Sublime-Text-3.md","hash":"f3edc9931a85fdc1c1aeb4b88e9a7e6a2d79de86","modified":1515913233719},{"_id":"themes/yilia/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1515836773963},{"_id":"themes/yilia/.git/config","hash":"24300cece9d72967ea63724bdb2a8e3c2ac2cc52","modified":1515836773978},{"_id":"themes/yilia/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1515836756170},{"_id":"themes/yilia/.git/index","hash":"303c2251f5ff5fa8c1ed9236f111d9f213fb9ad3","modified":1515921254216},{"_id":"themes/yilia/.git/packed-refs","hash":"83644c3638dafa38c817265c9207f098dd8aeee6","modified":1515836773951},{"_id":"themes/yilia/languages/default.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1515836774003},{"_id":"themes/yilia/languages/fr.yml","hash":"b4be1c1592a72012e48df2b3ec41cc9685573e50","modified":1515836774005},{"_id":"themes/yilia/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1515836774006},{"_id":"themes/yilia/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1515836774007},{"_id":"themes/yilia/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1515836774009},{"_id":"themes/yilia/languages/zh-CN.yml","hash":"b057f389c6713010f97d461e48ec959b0b6f3b44","modified":1515836774010},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1515836774011},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1515836774051},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1515836774053},{"_id":"themes/yilia/layout/index.ejs","hash":"ec498c6c0606acde997ce195dad97b267418d980","modified":1515836774054},{"_id":"themes/yilia/layout/layout.ejs","hash":"b471ab706d48e0be3f783eab1c94bf5878ef5a94","modified":1515836774055},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1515836774056},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1515836774058},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1515836774059},{"_id":"themes/yilia/source/main.0cf68a.css","hash":"ddf6e2c6b953c2c59a3c271e6070010a4cc81cf9","modified":1515836774152},{"_id":"themes/yilia/source/slider.e37972.js","hash":"ce5eac88301fe4f2fce0fb6203adfd58eb8313ac","modified":1515836774157},{"_id":"themes/yilia/source-src/css.ejs","hash":"cf7eab48d626433120d1ef9697f719a359817018","modified":1515836774062},{"_id":"themes/yilia/source-src/script.ejs","hash":"28abac2426761d7e715b38aadd86ce6549c8ae77","modified":1515836774136},{"_id":"themes/yilia/layout/_partial/toc.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515836774047},{"_id":"themes/yilia/source/main.0cf68a.js","hash":"283ae27ea37ac3e0e45b2e05c2482a4c594b9c25","modified":1515836774153},{"_id":"themes/yilia/source/mobile.992cbe.js","hash":"1801ef448909ea23c0a48e9d63b80d0cfd5534ce","modified":1515836774156},{"_id":"source/_posts/2018-01-12-windows上-tensorflow-gpu/clipboard2.png","hash":"d75047424f56d34ca896ddbb7b29d80067334ed4","modified":1505476615851},{"_id":"source/_posts/2018-01-12-windows上-tensorflow-gpu/clipboard1.png","hash":"67b1a672b2fe862c4244751df852e25957ad5da7","modified":1505476451187},{"_id":"source/_posts/2018-01-12-windows上-tensorflow-gpu/clipboard3.png","hash":"cc6c42bd5e12c9d83a5347f407768bd82dc33a6b","modified":1505697061548},{"_id":"source/_posts/2018-01-12-windows上-tensorflow-gpu/clipboard4.png","hash":"bd92bfc3627d4c12d0a7a98b1efc76cda2722cb7","modified":1505477496865},{"_id":"source/_posts/2018-01-14-texlive-Sublime-Text-3/2.png","hash":"0fef6ffebb28c900f72c8cf5b217e0e1d5b46d2b","modified":1500348673485},{"_id":"source/_posts/2018-01-14-texlive-Sublime-Text-3/1.png","hash":"a9466d5b102340acdde8d7422ac174ba31426534","modified":1500348673493},{"_id":"source/_posts/2018-01-14-texlive-Sublime-Text-3/3.png","hash":"c8ab9bd7060ea9c433671a59a1179361e932fcfc","modified":1515911704104},{"_id":"themes/yilia/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1515836756171},{"_id":"themes/yilia/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1515836756173},{"_id":"themes/yilia/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1515836756174},{"_id":"themes/yilia/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1515836756176},{"_id":"themes/yilia/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1515836756177},{"_id":"themes/yilia/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1515836756179},{"_id":"themes/yilia/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1515836756180},{"_id":"themes/yilia/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1515836756181},{"_id":"themes/yilia/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1515836756182},{"_id":"themes/yilia/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1515836756184},{"_id":"themes/yilia/.git/logs/HEAD","hash":"fa1d48ca9436ec665031e84406dfcf2bc2457a26","modified":1515836773971},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"c70f367f54064a441e574c913f5e0ea121d0f899","modified":1515836774014},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"edc0154b30a4127acda10297bec6aacf754b4ac4","modified":1515836774015},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a4eacc2bc1278095a0ef99f904b0634c78f980eb","modified":1515836774016},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"8dea8f5f93a60185439b330b0f1d1649a6ab4bd0","modified":1515836774018},{"_id":"themes/yilia/layout/_partial/aside.ejs","hash":"751e5deab5365348be5243688b419c82d337ab9a","modified":1515836774019},{"_id":"themes/yilia/layout/_partial/baidu-analytics.ejs","hash":"155327c23607f69989b58845f24d842a54e504b8","modified":1515836774020},{"_id":"themes/yilia/layout/_partial/css.ejs","hash":"236f8a377b2e4e35754319c3029bcd4a4115431d","modified":1515836774022},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"871f81cacd5d41cb2eb001cd56254217a857dc2f","modified":1515836774023},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1515836774024},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"12ca7d8dba56bc767b9309dda9526dcbaffc1614","modified":1515836774025},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"b69855e07b65117769adc515cb64b803932068c9","modified":1515836774027},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"df8c1a602d4ca76d109eaf312666ba95ee5ff784","modified":1515854970989},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"11550a418921d330e6553be0569a94ab5a217967","modified":1515836774029},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"ccec1fc70f021cb50ac85b524e7949878ab93a18","modified":1515836774031},{"_id":"themes/yilia/layout/_partial/tools.ejs","hash":"0ffcb251b79e8a920c9b4cb6bb7a96a808816165","modified":1515836774049},{"_id":"themes/yilia/layout/_partial/viewer.ejs","hash":"cc1c39903aed0a0601d104238d2bbd13ad2a36f3","modified":1515836774050},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1515836774138},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1515836774140},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","hash":"75767c904d483d9b93469afb6b92bb6bdface639","modified":1515836774141},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1515836774144},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1515836774143},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1515836774145},{"_id":"themes/yilia/source/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1515836774147},{"_id":"themes/yilia/source/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1515836774149},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1515836774150},{"_id":"themes/yilia/source-src/css/_function.scss","hash":"ce227b6f5a9af194fd5d455200630f32c05e151f","modified":1515836774065},{"_id":"themes/yilia/source-src/css/_core.scss","hash":"29ba600e98ed55f7af4ade8038272c84cba21188","modified":1515836774064},{"_id":"themes/yilia/source-src/css/archive.scss","hash":"d6a7dd88404b383b5b94e4c7ec675a410c41f3cc","modified":1515836774067},{"_id":"themes/yilia/source-src/css/article-inner.scss","hash":"f7388f5c11370ef462f7cb913d8f72edf24ecaf9","modified":1515836774068},{"_id":"themes/yilia/source-src/css/article-main.scss","hash":"1577a2336b3ad122f49f60dff2bc1a97d4e7b18b","modified":1515836774070},{"_id":"themes/yilia/source-src/css/article.scss","hash":"55d082fec4c6bb341725567acaa29ce37d50320a","modified":1515836774073},{"_id":"themes/yilia/source-src/css/article-nav.scss","hash":"8f82fe898ba1c1bd00c24a7d8270feddc7eba3bc","modified":1515836774071},{"_id":"themes/yilia/source-src/css/aside.scss","hash":"07244c188f58ecfb90bb7c047b8cde977f1dc4b4","modified":1515836774074},{"_id":"themes/yilia/source-src/css/comment.scss","hash":"b85f344f2c66d43d7094746e0a9ccb21d0534201","modified":1515836774075},{"_id":"themes/yilia/source-src/css/fonts.scss","hash":"96d7eb1d42c06fdcccb8ef969f6ecd30c3194903","modified":1515836774084},{"_id":"themes/yilia/source-src/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1515836774093},{"_id":"themes/yilia/source-src/css/footer.scss","hash":"7ca837a4cc34db1c35f01baec85eb10ccc64ea86","modified":1515836774092},{"_id":"themes/yilia/source-src/css/grid.scss","hash":"f53ea8270752b5919ec5d79224d22af91f2eda12","modified":1515836774095},{"_id":"themes/yilia/source-src/css/highlight.scss","hash":"40e5aa5056dc0b3b9f51c5b387370b612e265d4e","modified":1515836774096},{"_id":"themes/yilia/source-src/css/left.scss","hash":"80dac621e43581a254d0152d5df901e4d0b01c09","modified":1515836774102},{"_id":"themes/yilia/source-src/css/main.scss","hash":"9eba1fcf4805256697528fcf3b767cf6dd8d0591","modified":1515836774103},{"_id":"themes/yilia/source-src/css/mobile-slider.scss","hash":"19f10fd2f0c3377aa4b165b3c2291ecf86dd9351","modified":1515836774104},{"_id":"themes/yilia/source-src/css/mobile.scss","hash":"d995dcd483a250fe61b426158afb61bf8923a927","modified":1515836774106},{"_id":"themes/yilia/source-src/css/page.scss","hash":"244c4d75c375978ff9edb74acc68825e63c6b235","modified":1515836774107},{"_id":"themes/yilia/source-src/css/reward.scss","hash":"a557a9ed244c82b8b71e9da9de3339d92783499f","modified":1515836774109},{"_id":"themes/yilia/source-src/css/scroll.scss","hash":"2495f7e4e3b055735c531f944b5f40a118a351ec","modified":1515836774110},{"_id":"themes/yilia/source-src/css/share.scss","hash":"9d6f6884f40c191882e56a1e1e1192400944a515","modified":1515836774111},{"_id":"themes/yilia/source-src/css/social.scss","hash":"a10a038a1dac8953cb4ffc7e04272eff9fac54e4","modified":1515836774112},{"_id":"themes/yilia/source-src/css/tags-cloud.scss","hash":"399744e98e7c67939ed9b23c2670d8baad044eda","modified":1515836774114},{"_id":"themes/yilia/source-src/css/tags.scss","hash":"915c93edd67c5326695cc7dc84b14c5f154dbcc8","modified":1515836774115},{"_id":"themes/yilia/source-src/css/tools.scss","hash":"2924fb6f77c4a9973cd928c2c7db0acb848ed483","modified":1515836774116},{"_id":"themes/yilia/source-src/css/tooltip.scss","hash":"b81cedbe31accca82e597801186911a7b5e6841c","modified":1515836774118},{"_id":"themes/yilia/source-src/js/Q.js","hash":"e56d9710afa79b31ca6b9fbd845f6d1895f5214b","modified":1515836774120},{"_id":"themes/yilia/source-src/js/anm.js","hash":"d18f6276a352b871390a4112d479b9e58b8cdbbe","modified":1515836774121},{"_id":"themes/yilia/source-src/js/aside.js","hash":"5e4c3c3d61f1e1ce2f09688d3aff25fadc851fff","modified":1515836774123},{"_id":"themes/yilia/source-src/js/browser.js","hash":"4dc04845cf27f350922b63f1813a9c82e6e33b05","modified":1515836774124},{"_id":"themes/yilia/source-src/js/fix.js","hash":"67b8819abb886c9d066fb3b0624ca15e06f63fe0","modified":1515836774125},{"_id":"themes/yilia/source-src/js/main.js","hash":"fe98bf90ce61658fe16ae057f8b6a512a845af3b","modified":1515836774126},{"_id":"themes/yilia/source-src/js/mobile.js","hash":"461c08ffcbc724d74ec7e0ff38e171eefe0f89fd","modified":1515836774128},{"_id":"themes/yilia/source-src/js/report.js","hash":"57680f9a23bd0a1eaafd64ae08cc33e20627ab15","modified":1515836774129},{"_id":"themes/yilia/source-src/js/share.js","hash":"d4ccff8266c37363b3904226f5d035b7db882c61","modified":1515836774131},{"_id":"themes/yilia/source-src/js/slider.js","hash":"0beaa112657ad57c723d9e773d5b79de60c1dd74","modified":1515836774132},{"_id":"themes/yilia/source-src/js/util.js","hash":"3bcdeb95072b85600874424e6929e3e22cfddaa0","modified":1515836774133},{"_id":"themes/yilia/source-src/js/viewer.js","hash":"c699cf3c89409ec8f044258e0715a470861b5d5d","modified":1515836774135},{"_id":"themes/yilia/layout/_partial/script.ejs","hash":"e98ec0b3b56f14d1d79af99ceb42727719a584f3","modified":1515836774047},{"_id":"themes/yilia/.git/objects/pack/pack-10c0113f98f0f05bba24103a23f2d23d68fabbc6.idx","hash":"f3a1b73bedee87882e074915445d992edcf0f95a","modified":1515836773732},{"_id":"themes/yilia/.git/refs/heads/master","hash":"4ed77da1a2617db0e77c3e3e190a1c79c16dfb9a","modified":1515836773966},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"e777cbf959b11c4dfda649c562799899b90ab4a3","modified":1515836774032},{"_id":"themes/yilia/layout/_partial/post/changyan.ejs","hash":"086c8a88fd3bcae7ec13258df58e25d6354af2fa","modified":1515836774034},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"aae96de18d48cd3b9b7bf6fed0100e15b53cca97","modified":1515836774035},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"f6b4c4eaafb5ac386273354b5f64a26139b7a3b0","modified":1515836774036},{"_id":"themes/yilia/layout/_partial/post/gitment.ejs","hash":"25655016773aa5d0774c56115ae1736a9fc9ea1f","modified":1515836774038},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"b6a97043f9ec37e571aacacfedcda1d4d75e3c7c","modified":1515836774039},{"_id":"themes/yilia/layout/_partial/post/share.ejs","hash":"345b262e3c3b75c0cd9a93d9ecabcf06e33e54ff","modified":1515836774041},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"2c4e4ca36c9bb4318506c38aca7127f1f44d827f","modified":1515836774042},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1515836774043},{"_id":"themes/yilia/layout/_partial/post/wangyiyun.ejs","hash":"fb022502c741b4a26bad6b2ad37245c10ede3f1a","modified":1515836774044},{"_id":"themes/yilia/source-src/css/core/_animation.scss","hash":"1834c3ed8560716e63bb3a50be94cac87fbbeaf3","modified":1515836774077},{"_id":"themes/yilia/source-src/css/core/_media-queries.scss","hash":"262ffcd88775080b7f511db37f58d2bcb1b2bfc7","modified":1515836774078},{"_id":"themes/yilia/source-src/css/core/_mixin.scss","hash":"91db061c9c17628291a005e5bd4936cf9d35a6c4","modified":1515836774080},{"_id":"themes/yilia/source-src/css/core/_reset.scss","hash":"398a49913b4a47d928103562b1ce94520be4026a","modified":1515836774081},{"_id":"themes/yilia/source-src/css/core/_variables.scss","hash":"6e75bdaa46de83094ba0873099c6e7d656a22453","modified":1515836774083},{"_id":"themes/yilia/source-src/css/fonts/iconfont.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1515836774086},{"_id":"themes/yilia/source-src/css/fonts/iconfont.svg","hash":"75767c904d483d9b93469afb6b92bb6bdface639","modified":1515836774088},{"_id":"themes/yilia/source-src/css/fonts/iconfont.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1515836774089},{"_id":"themes/yilia/source-src/css/fonts/iconfont.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1515836774091},{"_id":"themes/yilia/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1515836774098},{"_id":"themes/yilia/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1515836774099},{"_id":"themes/yilia/source-src/css/img/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1515836774100},{"_id":"themes/yilia/.git/logs/refs/heads/master","hash":"fa1d48ca9436ec665031e84406dfcf2bc2457a26","modified":1515836773969},{"_id":"themes/yilia/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1515836773954},{"_id":"themes/yilia/.git/logs/refs/remotes/origin/HEAD","hash":"fa1d48ca9436ec665031e84406dfcf2bc2457a26","modified":1515836773961},{"_id":"themes/yilia/.git/objects/pack/pack-10c0113f98f0f05bba24103a23f2d23d68fabbc6.pack","hash":"b80a6224c7b996136fed426e464c7a986ce9632c","modified":1515836773794},{"_id":"public/content.json","hash":"b7a37c9d91ca82b4b1904e4c31b2f0a37bb422a5","modified":1515921438959},{"_id":"public/README.html","hash":"04f20d29ee81e11d7988801d403199ee443294ab","modified":1515921439100},{"_id":"public/2018/01/14/2018-01-14-mysql-remote-connection/index.html","hash":"d96d54506c27d6ee76c140ebc50e7fb78e3522e2","modified":1515921439100},{"_id":"public/2018/01/14/2018-01-14-texlive-Sublime-Text-3/index.html","hash":"cc4ba107adf0287632d9f546b8eb9da6595dd14e","modified":1515921439100},{"_id":"public/2018/01/14/2018-01-14-hexo-github-storage/index.html","hash":"b2f957fca3463ec14cc3d3278d390d9a0ccdd5a9","modified":1515921568262},{"_id":"public/2018/01/12/2018-01-12-windows上-tensorflow-gpu/index.html","hash":"a40095c3d686459c881120c716e895631cc56338","modified":1515921439101},{"_id":"public/archives/index.html","hash":"c9df4e89325a80650c80ff9c2e0680ec67bf82c7","modified":1515921439101},{"_id":"public/archives/2018/index.html","hash":"cfac1cd3cf8fd796a34d4b52edcacce39f825638","modified":1515921439101},{"_id":"public/archives/2018/01/index.html","hash":"c058372745de263a5a3278fa10417337a2048277","modified":1515921439101},{"_id":"public/categories/blog/index.html","hash":"cd6fa5a35c47f0c7ee5163f66cadc7d8fc921ec9","modified":1515921439101},{"_id":"public/index.html","hash":"2a8cee42d23780b72d963a83d913c570eea56fd6","modified":1515921439102},{"_id":"public/tags/windows/index.html","hash":"6509cd3c0712b68d2acfe20475617b88c3339569","modified":1515921439102},{"_id":"public/tags/tensorflow/index.html","hash":"165d894a64d97c18cbf0217ab5ffdf02c30b8bd6","modified":1515921439102},{"_id":"public/tags/gpu/index.html","hash":"d85379735089fe3d28a1d7cc5980f39c9a087f9b","modified":1515921439102},{"_id":"public/tags/mysql/index.html","hash":"73cac68d9004f4711aa5f0125794a563567f7105","modified":1515921439102},{"_id":"public/tags/外网访问/index.html","hash":"6769da72dd552f5df1c893778a71005d69af7503","modified":1515921439102},{"_id":"public/tags/texlive/index.html","hash":"14706449cfcdadbcad63d95d7fb4145edca9cb47","modified":1515921439102},{"_id":"public/tags/sublime/index.html","hash":"e39fbd71b816319ff643e0262b57b60bf421b509","modified":1515921439103},{"_id":"public/tags/latex/index.html","hash":"37d8c89cb762d0c700e7774e5352d389d16af5bf","modified":1515921439103},{"_id":"public/tags/hexo/index.html","hash":"1642f13fd51917ee4355e80de599964a7f26350e","modified":1515921439103},{"_id":"public/tags/github/index.html","hash":"b6a2afda37873552ea074d2cd12142de10ed0132","modified":1515921439103},{"_id":"public/CNAME","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515921439133},{"_id":"public/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1515921439136},{"_id":"public/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1515921439136},{"_id":"public/fonts/iconfont.45d7ee.svg","hash":"75767c904d483d9b93469afb6b92bb6bdface639","modified":1515921439136},{"_id":"public/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1515921439136},{"_id":"public/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1515921439137},{"_id":"public/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1515921439137},{"_id":"public/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1515921439137},{"_id":"public/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1515921439137},{"_id":"public/2018/01/14/2018-01-14-texlive-Sublime-Text-3/1.png","hash":"a9466d5b102340acdde8d7422ac174ba31426534","modified":1515921439137},{"_id":"public/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1515921439137},{"_id":"public/2018/01/14/2018-01-14-texlive-Sublime-Text-3/2.png","hash":"0fef6ffebb28c900f72c8cf5b217e0e1d5b46d2b","modified":1515921439137},{"_id":"public/2018/01/14/2018-01-14-texlive-Sublime-Text-3/3.png","hash":"c8ab9bd7060ea9c433671a59a1179361e932fcfc","modified":1515921439137},{"_id":"public/2018/01/12/2018-01-12-windows上-tensorflow-gpu/clipboard2.png","hash":"d75047424f56d34ca896ddbb7b29d80067334ed4","modified":1515921439137},{"_id":"public/2018/01/12/2018-01-12-windows上-tensorflow-gpu/clipboard1.png","hash":"67b1a672b2fe862c4244751df852e25957ad5da7","modified":1515921439137},{"_id":"public/2018/01/12/2018-01-12-windows上-tensorflow-gpu/clipboard4.png","hash":"bd92bfc3627d4c12d0a7a98b1efc76cda2722cb7","modified":1515921439138},{"_id":"public/2018/01/12/2018-01-12-windows上-tensorflow-gpu/clipboard3.png","hash":"cc6c42bd5e12c9d83a5347f407768bd82dc33a6b","modified":1515921439138},{"_id":"public/main.0cf68a.js","hash":"993fadeb5f6d296e9d997a49ee20dc97333ceab7","modified":1515921439145},{"_id":"public/main.0cf68a.css","hash":"ddf6e2c6b953c2c59a3c271e6070010a4cc81cf9","modified":1515921439145},{"_id":"public/slider.e37972.js","hash":"6dec4e220c89049037eebc44404abd8455d22ad7","modified":1515921439145},{"_id":"public/mobile.992cbe.js","hash":"01b35e71e37aa2849664eb5daf26daede2278398","modified":1515921439145}],"Category":[{"name":"blog","_id":"cjcekhg060003d8niwdwjurbl"}],"Data":[],"Page":[{"_content":"","source":"README.md","raw":"","date":"2018-01-13T09:55:01.378Z","updated":"2018-01-13T09:54:50.355Z","path":"README.html","title":"","comments":1,"layout":"page","_id":"cjcekhfxt0000d8nirh95bs7k","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"windows上安装tensorflow(gpu)","date":"2018-01-11T16:00:00.000Z","_content":"\n## 一、安装python3\n### 1、下载并安装python3\n官网下载：https://www.python.org/downloads/windows/\n增加环境变量（若无），进入python安装目录并将python.exe修改为python3.exe\n### 2、安装pip3\n下载脚本：https://bootstrap.pypa.io/get-pip.py\n运行脚本：<b>python3 get-pip.py</b>\n<!-- more -->\n\n## 二、安装tensorflow（GPU）\n使用pip命令执行：\n<b>pip install --ignore-installed --upgrade tensorflow-gpu </b>\n## 三、安装CUDA\n首先要检查电脑的显卡型号是否支持GPU加速。\n点击查看是否支持自己的gpu：https://developer.nvidia.com/cuda-gpus\n<img src=\"clipboard1.png\" width=\"40%\" height=\"40%\">\n确定电脑显卡支持GPU加速后，选择对应版本并开始下载Cuda:\n https://developer.nvidia.com/cuda-downloads\n下载后推荐使用默认安装，安装路径一般为\n<u>C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v8.0</u>\n![logo2](clipboard2.png)\n安装完后会默认配置环境变量，且为了后续依赖包不报错，还需要在path中添加：\n<u>C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v8.0\\bin</u>              及 \n<u>C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v8.0\\lib\\x64</u>\n两个环境变量。\n## 四、安装Cudnn\n选择对应版本下载cudnn：https://developer.nvidia.com/rdp/cudnn-download\n<img src=\"clipboard3.png\" width=\"50%\" height=\"50%\">\n下载后面附有cuda版本号，需和上面相一致（红色方框部分是cudnn7，可能会报错，推荐它下面的一个安装V6.0）\n<font color=\"red\">Cudnn解压后将bin,include,lib三个文件夹里面的内容原封不对覆盖至Cuda安装目录下即可，</font>默认主路径如上一步。\n\n\n\n## 五、运行测试\n运行如下代码\n```python\nimport tensorflow as tf  \n    sess = tf.Session()  \n    x = tf.constant(5)  \n    y = tf.constant(35)  \n    print(sess.run(x * y))  \n  }\n```\n<b>结果：175</b>\n![logo4](clipboard4.png)\n<i>（若报\"pywrap_tensorflow_internal\"错误，一般为版本不对，需要进入cuda主目录，将cudnn64_7修改为如上图所示的cudnn64_6)</i>\n\n## 六、可能错误\n* <b>Cannot remove entries from nonexistent file</b>\n如果在安装 TensorFlow 的时候出现类似Cannot remove entries from nonexistent file c:\\users\\li\\anaconda3\\lib\\site-packages\\easy-install.pth 的错误，那么可以参考 Cannot remove entries from nonexistent #622 和 osx 10.11 installation issues #135，里面说了好多种解决办法，我在这里介绍一种方法：\n在 <u>pip3 install --upgrade tensorflow-gpu</u> 之前先执行 <u>pip install --upgrade --ignore-installed setuptools</u> 。 \n* <b>ImportError: DLL load failed: 找不到指定的模块。 和ImportError: No module named '_pywrap_tensorflow_internal' </b>\n如果在 import tensorflow 的时候这两个问题同时出现，那么很有可能是你的 cuda 和 cudnn 版本有问题，例如你的 cuda 版本是8.0.60，而正确的是 8.0.44，重新安装正确的版本（文章里提供的）就可以。参考 On Windows, running “import tensorflow” generates No module named “_pywrap_tensorflow” error 。\n\n## 参考文献\nhttps://www.tensorflow.org/install/install_windows\nhttp://blog.csdn.net/u010099080/article/details/52333935\nhttp://blog.csdn.net/u010099080/article/details/53418159\nhttp://blog.csdn.net/flying_sfeng/article/details/58057400","source":"_posts/2018-01-12-windows上-tensorflow-gpu.md","raw":"---\ntitle: windows上安装tensorflow(gpu)\ndate: 2018-01-12\ncategories: blog\ntags: [windows,tensorflow,gpu]\n---\n\n## 一、安装python3\n### 1、下载并安装python3\n官网下载：https://www.python.org/downloads/windows/\n增加环境变量（若无），进入python安装目录并将python.exe修改为python3.exe\n### 2、安装pip3\n下载脚本：https://bootstrap.pypa.io/get-pip.py\n运行脚本：<b>python3 get-pip.py</b>\n<!-- more -->\n\n## 二、安装tensorflow（GPU）\n使用pip命令执行：\n<b>pip install --ignore-installed --upgrade tensorflow-gpu </b>\n## 三、安装CUDA\n首先要检查电脑的显卡型号是否支持GPU加速。\n点击查看是否支持自己的gpu：https://developer.nvidia.com/cuda-gpus\n<img src=\"clipboard1.png\" width=\"40%\" height=\"40%\">\n确定电脑显卡支持GPU加速后，选择对应版本并开始下载Cuda:\n https://developer.nvidia.com/cuda-downloads\n下载后推荐使用默认安装，安装路径一般为\n<u>C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v8.0</u>\n![logo2](clipboard2.png)\n安装完后会默认配置环境变量，且为了后续依赖包不报错，还需要在path中添加：\n<u>C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v8.0\\bin</u>              及 \n<u>C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v8.0\\lib\\x64</u>\n两个环境变量。\n## 四、安装Cudnn\n选择对应版本下载cudnn：https://developer.nvidia.com/rdp/cudnn-download\n<img src=\"clipboard3.png\" width=\"50%\" height=\"50%\">\n下载后面附有cuda版本号，需和上面相一致（红色方框部分是cudnn7，可能会报错，推荐它下面的一个安装V6.0）\n<font color=\"red\">Cudnn解压后将bin,include,lib三个文件夹里面的内容原封不对覆盖至Cuda安装目录下即可，</font>默认主路径如上一步。\n\n\n\n## 五、运行测试\n运行如下代码\n```python\nimport tensorflow as tf  \n    sess = tf.Session()  \n    x = tf.constant(5)  \n    y = tf.constant(35)  \n    print(sess.run(x * y))  \n  }\n```\n<b>结果：175</b>\n![logo4](clipboard4.png)\n<i>（若报\"pywrap_tensorflow_internal\"错误，一般为版本不对，需要进入cuda主目录，将cudnn64_7修改为如上图所示的cudnn64_6)</i>\n\n## 六、可能错误\n* <b>Cannot remove entries from nonexistent file</b>\n如果在安装 TensorFlow 的时候出现类似Cannot remove entries from nonexistent file c:\\users\\li\\anaconda3\\lib\\site-packages\\easy-install.pth 的错误，那么可以参考 Cannot remove entries from nonexistent #622 和 osx 10.11 installation issues #135，里面说了好多种解决办法，我在这里介绍一种方法：\n在 <u>pip3 install --upgrade tensorflow-gpu</u> 之前先执行 <u>pip install --upgrade --ignore-installed setuptools</u> 。 \n* <b>ImportError: DLL load failed: 找不到指定的模块。 和ImportError: No module named '_pywrap_tensorflow_internal' </b>\n如果在 import tensorflow 的时候这两个问题同时出现，那么很有可能是你的 cuda 和 cudnn 版本有问题，例如你的 cuda 版本是8.0.60，而正确的是 8.0.44，重新安装正确的版本（文章里提供的）就可以。参考 On Windows, running “import tensorflow” generates No module named “_pywrap_tensorflow” error 。\n\n## 参考文献\nhttps://www.tensorflow.org/install/install_windows\nhttp://blog.csdn.net/u010099080/article/details/52333935\nhttp://blog.csdn.net/u010099080/article/details/53418159\nhttp://blog.csdn.net/flying_sfeng/article/details/58057400","slug":"2018-01-12-windows上-tensorflow-gpu","published":1,"updated":"2018-01-13T14:22:10.028Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcekhfzw0001d8nir02cmyal","content":"<h2 id=\"一、安装python3\"><a href=\"#一、安装python3\" class=\"headerlink\" title=\"一、安装python3\"></a>一、安装python3</h2><h3 id=\"1、下载并安装python3\"><a href=\"#1、下载并安装python3\" class=\"headerlink\" title=\"1、下载并安装python3\"></a>1、下载并安装python3</h3><p>官网下载：<a href=\"https://www.python.org/downloads/windows/\" target=\"_blank\" rel=\"noopener\">https://www.python.org/downloads/windows/</a><br>增加环境变量（若无），进入python安装目录并将python.exe修改为python3.exe</p>\n<h3 id=\"2、安装pip3\"><a href=\"#2、安装pip3\" class=\"headerlink\" title=\"2、安装pip3\"></a>2、安装pip3</h3><p>下载脚本：<a href=\"https://bootstrap.pypa.io/get-pip.py\" target=\"_blank\" rel=\"noopener\">https://bootstrap.pypa.io/get-pip.py</a><br>运行脚本：<b>python3 get-pip.py</b><br><a id=\"more\"></a></p>\n<h2 id=\"二、安装tensorflow（GPU）\"><a href=\"#二、安装tensorflow（GPU）\" class=\"headerlink\" title=\"二、安装tensorflow（GPU）\"></a>二、安装tensorflow（GPU）</h2><p>使用pip命令执行：<br><b>pip install –ignore-installed –upgrade tensorflow-gpu </b></p>\n<h2 id=\"三、安装CUDA\"><a href=\"#三、安装CUDA\" class=\"headerlink\" title=\"三、安装CUDA\"></a>三、安装CUDA</h2><p>首先要检查电脑的显卡型号是否支持GPU加速。<br>点击查看是否支持自己的gpu：<a href=\"https://developer.nvidia.com/cuda-gpus\" target=\"_blank\" rel=\"noopener\">https://developer.nvidia.com/cuda-gpus</a><br><img src=\"clipboard1.png\" width=\"40%\" height=\"40%\"><br>确定电脑显卡支持GPU加速后，选择对应版本并开始下载Cuda:<br> <a href=\"https://developer.nvidia.com/cuda-downloads\" target=\"_blank\" rel=\"noopener\">https://developer.nvidia.com/cuda-downloads</a><br>下载后推荐使用默认安装，安装路径一般为<br><u>C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v8.0</u><br><img src=\"clipboard2.png\" alt=\"logo2\"><br>安装完后会默认配置环境变量，且为了后续依赖包不报错，还需要在path中添加：<br><u>C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v8.0\\bin</u>              及<br><u>C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v8.0\\lib\\x64</u><br>两个环境变量。</p>\n<h2 id=\"四、安装Cudnn\"><a href=\"#四、安装Cudnn\" class=\"headerlink\" title=\"四、安装Cudnn\"></a>四、安装Cudnn</h2><p>选择对应版本下载cudnn：<a href=\"https://developer.nvidia.com/rdp/cudnn-download\" target=\"_blank\" rel=\"noopener\">https://developer.nvidia.com/rdp/cudnn-download</a><br><img src=\"clipboard3.png\" width=\"50%\" height=\"50%\"><br>下载后面附有cuda版本号，需和上面相一致（红色方框部分是cudnn7，可能会报错，推荐它下面的一个安装V6.0）</p>\n<p><font color=\"red\">Cudnn解压后将bin,include,lib三个文件夹里面的内容原封不对覆盖至Cuda安装目录下即可，</font>默认主路径如上一步。</p>\n<h2 id=\"五、运行测试\"><a href=\"#五、运行测试\" class=\"headerlink\" title=\"五、运行测试\"></a>五、运行测试</h2><p>运行如下代码<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> tensorflow <span class=\"keyword\">as</span> tf  </span><br><span class=\"line\">    sess = tf.Session()  </span><br><span class=\"line\">    x = tf.constant(<span class=\"number\">5</span>)  </span><br><span class=\"line\">    y = tf.constant(<span class=\"number\">35</span>)  </span><br><span class=\"line\">    print(sess.run(x * y))  </span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n<p><b>结果：175</b><br><img src=\"clipboard4.png\" alt=\"logo4\"><br><i>（若报”pywrap_tensorflow_internal”错误，一般为版本不对，需要进入cuda主目录，将cudnn64_7修改为如上图所示的cudnn64_6)</i></p>\n<h2 id=\"六、可能错误\"><a href=\"#六、可能错误\" class=\"headerlink\" title=\"六、可能错误\"></a>六、可能错误</h2><ul>\n<li><b>Cannot remove entries from nonexistent file</b><br>如果在安装 TensorFlow 的时候出现类似Cannot remove entries from nonexistent file c:\\users\\li\\anaconda3\\lib\\site-packages\\easy-install.pth 的错误，那么可以参考 Cannot remove entries from nonexistent #622 和 osx 10.11 installation issues #135，里面说了好多种解决办法，我在这里介绍一种方法：<br>在 <u>pip3 install –upgrade tensorflow-gpu</u> 之前先执行 <u>pip install –upgrade –ignore-installed setuptools</u> 。 </li>\n<li><b>ImportError: DLL load failed: 找不到指定的模块。 和ImportError: No module named ‘_pywrap_tensorflow_internal’ </b><br>如果在 import tensorflow 的时候这两个问题同时出现，那么很有可能是你的 cuda 和 cudnn 版本有问题，例如你的 cuda 版本是8.0.60，而正确的是 8.0.44，重新安装正确的版本（文章里提供的）就可以。参考 On Windows, running “import tensorflow” generates No module named “_pywrap_tensorflow” error 。</li>\n</ul>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><p><a href=\"https://www.tensorflow.org/install/install_windows\" target=\"_blank\" rel=\"noopener\">https://www.tensorflow.org/install/install_windows</a><br><a href=\"http://blog.csdn.net/u010099080/article/details/52333935\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/u010099080/article/details/52333935</a><br><a href=\"http://blog.csdn.net/u010099080/article/details/53418159\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/u010099080/article/details/53418159</a><br><a href=\"http://blog.csdn.net/flying_sfeng/article/details/58057400\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/flying_sfeng/article/details/58057400</a></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"一、安装python3\"><a href=\"#一、安装python3\" class=\"headerlink\" title=\"一、安装python3\"></a>一、安装python3</h2><h3 id=\"1、下载并安装python3\"><a href=\"#1、下载并安装python3\" class=\"headerlink\" title=\"1、下载并安装python3\"></a>1、下载并安装python3</h3><p>官网下载：<a href=\"https://www.python.org/downloads/windows/\" target=\"_blank\" rel=\"noopener\">https://www.python.org/downloads/windows/</a><br>增加环境变量（若无），进入python安装目录并将python.exe修改为python3.exe</p>\n<h3 id=\"2、安装pip3\"><a href=\"#2、安装pip3\" class=\"headerlink\" title=\"2、安装pip3\"></a>2、安装pip3</h3><p>下载脚本：<a href=\"https://bootstrap.pypa.io/get-pip.py\" target=\"_blank\" rel=\"noopener\">https://bootstrap.pypa.io/get-pip.py</a><br>运行脚本：<b>python3 get-pip.py</b><br>","more":"</p>\n<h2 id=\"二、安装tensorflow（GPU）\"><a href=\"#二、安装tensorflow（GPU）\" class=\"headerlink\" title=\"二、安装tensorflow（GPU）\"></a>二、安装tensorflow（GPU）</h2><p>使用pip命令执行：<br><b>pip install –ignore-installed –upgrade tensorflow-gpu </b></p>\n<h2 id=\"三、安装CUDA\"><a href=\"#三、安装CUDA\" class=\"headerlink\" title=\"三、安装CUDA\"></a>三、安装CUDA</h2><p>首先要检查电脑的显卡型号是否支持GPU加速。<br>点击查看是否支持自己的gpu：<a href=\"https://developer.nvidia.com/cuda-gpus\" target=\"_blank\" rel=\"noopener\">https://developer.nvidia.com/cuda-gpus</a><br><img src=\"clipboard1.png\" width=\"40%\" height=\"40%\"><br>确定电脑显卡支持GPU加速后，选择对应版本并开始下载Cuda:<br> <a href=\"https://developer.nvidia.com/cuda-downloads\" target=\"_blank\" rel=\"noopener\">https://developer.nvidia.com/cuda-downloads</a><br>下载后推荐使用默认安装，安装路径一般为<br><u>C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v8.0</u><br><img src=\"clipboard2.png\" alt=\"logo2\"><br>安装完后会默认配置环境变量，且为了后续依赖包不报错，还需要在path中添加：<br><u>C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v8.0\\bin</u>              及<br><u>C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v8.0\\lib\\x64</u><br>两个环境变量。</p>\n<h2 id=\"四、安装Cudnn\"><a href=\"#四、安装Cudnn\" class=\"headerlink\" title=\"四、安装Cudnn\"></a>四、安装Cudnn</h2><p>选择对应版本下载cudnn：<a href=\"https://developer.nvidia.com/rdp/cudnn-download\" target=\"_blank\" rel=\"noopener\">https://developer.nvidia.com/rdp/cudnn-download</a><br><img src=\"clipboard3.png\" width=\"50%\" height=\"50%\"><br>下载后面附有cuda版本号，需和上面相一致（红色方框部分是cudnn7，可能会报错，推荐它下面的一个安装V6.0）</p>\n<p><font color=\"red\">Cudnn解压后将bin,include,lib三个文件夹里面的内容原封不对覆盖至Cuda安装目录下即可，</font>默认主路径如上一步。</p>\n<h2 id=\"五、运行测试\"><a href=\"#五、运行测试\" class=\"headerlink\" title=\"五、运行测试\"></a>五、运行测试</h2><p>运行如下代码<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> tensorflow <span class=\"keyword\">as</span> tf  </span><br><span class=\"line\">    sess = tf.Session()  </span><br><span class=\"line\">    x = tf.constant(<span class=\"number\">5</span>)  </span><br><span class=\"line\">    y = tf.constant(<span class=\"number\">35</span>)  </span><br><span class=\"line\">    print(sess.run(x * y))  </span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n<p><b>结果：175</b><br><img src=\"clipboard4.png\" alt=\"logo4\"><br><i>（若报”pywrap_tensorflow_internal”错误，一般为版本不对，需要进入cuda主目录，将cudnn64_7修改为如上图所示的cudnn64_6)</i></p>\n<h2 id=\"六、可能错误\"><a href=\"#六、可能错误\" class=\"headerlink\" title=\"六、可能错误\"></a>六、可能错误</h2><ul>\n<li><b>Cannot remove entries from nonexistent file</b><br>如果在安装 TensorFlow 的时候出现类似Cannot remove entries from nonexistent file c:\\users\\li\\anaconda3\\lib\\site-packages\\easy-install.pth 的错误，那么可以参考 Cannot remove entries from nonexistent #622 和 osx 10.11 installation issues #135，里面说了好多种解决办法，我在这里介绍一种方法：<br>在 <u>pip3 install –upgrade tensorflow-gpu</u> 之前先执行 <u>pip install –upgrade –ignore-installed setuptools</u> 。 </li>\n<li><b>ImportError: DLL load failed: 找不到指定的模块。 和ImportError: No module named ‘_pywrap_tensorflow_internal’ </b><br>如果在 import tensorflow 的时候这两个问题同时出现，那么很有可能是你的 cuda 和 cudnn 版本有问题，例如你的 cuda 版本是8.0.60，而正确的是 8.0.44，重新安装正确的版本（文章里提供的）就可以。参考 On Windows, running “import tensorflow” generates No module named “_pywrap_tensorflow” error 。</li>\n</ul>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><p><a href=\"https://www.tensorflow.org/install/install_windows\" target=\"_blank\" rel=\"noopener\">https://www.tensorflow.org/install/install_windows</a><br><a href=\"http://blog.csdn.net/u010099080/article/details/52333935\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/u010099080/article/details/52333935</a><br><a href=\"http://blog.csdn.net/u010099080/article/details/53418159\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/u010099080/article/details/53418159</a><br><a href=\"http://blog.csdn.net/flying_sfeng/article/details/58057400\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/flying_sfeng/article/details/58057400</a></p>"},{"title":"Mysql设置允许外网访问（远程连接）","date":"2018-01-13T16:00:00.000Z","_content":"\n## 主要流程\n1、打开mysql.exe(MySQL Command Line Client)，输入密码（windows就进入my.ini修改，然后用任务管理器重启服务）\n\n2、输入：use mysql;\n\n3、查询host输入： select user,host from user;\n<!-- more -->\n4、创建host（如果有\"%\"这个host值，则跳过这一步）\n\n如果没有\"%\"这个host值,就执行下面这两句:\n\n    mysql> update user set host='%' where user='root';\n    mysql> flush privileges;\n\n5、授权用户\n\n（1）任意主机以用户root和密码ictwsn连接到mysql服务器\n\n    mysql> GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'ictwsn' WITH GRANT OPTION;\n    mysql> flush privileges;\n\n（2）指定IP为（如192.168.1.100）的主机以用户tuser和密码tpwd连接到mysql服务器\n\n    mysql> GRANT ALL PRIVILEGES ON *.* TO 'tuser'@'192.168.1.100' IDENTIFIED BY 'tpwd' WITH GRANT OPTION; \n    mysql> flush privileges;\n\n6、修改 mysql 的配置文件(针对ubuntu系统)：\n\n    sudo vi /etc/mysql/mysql.conf.d/mysqld.cnf\n找到 \"bind-address = 127.0.0.1\" , 这一行要注释掉，只需在前面加个#。\n\n<b>#bind-address = 127.0.0.1</b>\n或改为<br>\n<b>bind-address = 0.0.0.0</b>\n","source":"_posts/2018-01-14-mysql-remote-connection.md","raw":"---\ntitle: Mysql设置允许外网访问（远程连接）\ndate: 2018-01-14\ncategories: blog\ntags: [mysql,外网访问]\n---\n\n## 主要流程\n1、打开mysql.exe(MySQL Command Line Client)，输入密码（windows就进入my.ini修改，然后用任务管理器重启服务）\n\n2、输入：use mysql;\n\n3、查询host输入： select user,host from user;\n<!-- more -->\n4、创建host（如果有\"%\"这个host值，则跳过这一步）\n\n如果没有\"%\"这个host值,就执行下面这两句:\n\n    mysql> update user set host='%' where user='root';\n    mysql> flush privileges;\n\n5、授权用户\n\n（1）任意主机以用户root和密码ictwsn连接到mysql服务器\n\n    mysql> GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'ictwsn' WITH GRANT OPTION;\n    mysql> flush privileges;\n\n（2）指定IP为（如192.168.1.100）的主机以用户tuser和密码tpwd连接到mysql服务器\n\n    mysql> GRANT ALL PRIVILEGES ON *.* TO 'tuser'@'192.168.1.100' IDENTIFIED BY 'tpwd' WITH GRANT OPTION; \n    mysql> flush privileges;\n\n6、修改 mysql 的配置文件(针对ubuntu系统)：\n\n    sudo vi /etc/mysql/mysql.conf.d/mysqld.cnf\n找到 \"bind-address = 127.0.0.1\" , 这一行要注释掉，只需在前面加个#。\n\n<b>#bind-address = 127.0.0.1</b>\n或改为<br>\n<b>bind-address = 0.0.0.0</b>\n","slug":"2018-01-14-mysql-remote-connection","published":1,"updated":"2018-01-14T07:15:04.481Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcekhg020002d8niuml05p0t","content":"<h2 id=\"主要流程\"><a href=\"#主要流程\" class=\"headerlink\" title=\"主要流程\"></a>主要流程</h2><p>1、打开mysql.exe(MySQL Command Line Client)，输入密码（windows就进入my.ini修改，然后用任务管理器重启服务）</p>\n<p>2、输入：use mysql;</p>\n<p>3、查询host输入： select user,host from user;<br><a id=\"more\"></a><br>4、创建host（如果有”%”这个host值，则跳过这一步）</p>\n<p>如果没有”%”这个host值,就执行下面这两句:</p>\n<pre><code>mysql&gt; update user set host=&apos;%&apos; where user=&apos;root&apos;;\nmysql&gt; flush privileges;\n</code></pre><p>5、授权用户</p>\n<p>（1）任意主机以用户root和密码ictwsn连接到mysql服务器</p>\n<pre><code>mysql&gt; GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;ictwsn&apos; WITH GRANT OPTION;\nmysql&gt; flush privileges;\n</code></pre><p>（2）指定IP为（如192.168.1.100）的主机以用户tuser和密码tpwd连接到mysql服务器</p>\n<pre><code>mysql&gt; GRANT ALL PRIVILEGES ON *.* TO &apos;tuser&apos;@&apos;192.168.1.100&apos; IDENTIFIED BY &apos;tpwd&apos; WITH GRANT OPTION; \nmysql&gt; flush privileges;\n</code></pre><p>6、修改 mysql 的配置文件(针对ubuntu系统)：</p>\n<pre><code>sudo vi /etc/mysql/mysql.conf.d/mysqld.cnf\n</code></pre><p>找到 “bind-address = 127.0.0.1” , 这一行要注释掉，只需在前面加个#。</p>\n<p><b>#bind-address = 127.0.0.1</b><br>或改为<br><br><b>bind-address = 0.0.0.0</b></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"主要流程\"><a href=\"#主要流程\" class=\"headerlink\" title=\"主要流程\"></a>主要流程</h2><p>1、打开mysql.exe(MySQL Command Line Client)，输入密码（windows就进入my.ini修改，然后用任务管理器重启服务）</p>\n<p>2、输入：use mysql;</p>\n<p>3、查询host输入： select user,host from user;<br>","more":"<br>4、创建host（如果有”%”这个host值，则跳过这一步）</p>\n<p>如果没有”%”这个host值,就执行下面这两句:</p>\n<pre><code>mysql&gt; update user set host=&apos;%&apos; where user=&apos;root&apos;;\nmysql&gt; flush privileges;\n</code></pre><p>5、授权用户</p>\n<p>（1）任意主机以用户root和密码ictwsn连接到mysql服务器</p>\n<pre><code>mysql&gt; GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;ictwsn&apos; WITH GRANT OPTION;\nmysql&gt; flush privileges;\n</code></pre><p>（2）指定IP为（如192.168.1.100）的主机以用户tuser和密码tpwd连接到mysql服务器</p>\n<pre><code>mysql&gt; GRANT ALL PRIVILEGES ON *.* TO &apos;tuser&apos;@&apos;192.168.1.100&apos; IDENTIFIED BY &apos;tpwd&apos; WITH GRANT OPTION; \nmysql&gt; flush privileges;\n</code></pre><p>6、修改 mysql 的配置文件(针对ubuntu系统)：</p>\n<pre><code>sudo vi /etc/mysql/mysql.conf.d/mysqld.cnf\n</code></pre><p>找到 “bind-address = 127.0.0.1” , 这一行要注释掉，只需在前面加个#。</p>\n<p><b>#bind-address = 127.0.0.1</b><br>或改为<br><br><b>bind-address = 0.0.0.0</b></p>"},{"title":"使用sublime编写latex(texlive)","date":"2018-01-13T16:00:00.000Z","_content":"\n## 一、下载地址\n* TeXLive下载地址：\nhttp://ftp.math.purdue.edu/mirrors/ctan.org/systems/texlive/Images/texlive.iso\n* Sublime下载地址：\nhttp://sw.bos.baidu.com/sw-search-sp/software/6613504ddd3db/Sublime_Text_3.3126_Setup.exe\n* Sumatra PDF下载地址：\nhttp://sw.bos.baidu.com/sw-search-sp/software/0ebcac412a851/SumatraPDF-3.1.2.0-64-install.exe\n\n\n## 二、主要流程\n\n1. 先安装TeXLive（安装教程：http://jingyan.baidu.com/article/f0e83a2588f6d022e5910128.html）\n\n<!-- more -->\n2. 再安装sublime，再进入sublime根据下面教程安装LaTeXTools插件\n3. 最后安装Sumatra PDF，记住安装路径\n4. 然后根据下面的教程进入sublime里面配置一下\n\n## 三、安装LaTeXTools\n### 1. 安装Package Control\n    1)通过组合键 CTRL + `或是通过菜单命令View -> Show Console来打开控制台，然后将下面的代码输入，按enter即可。（输入的代码网上查找）重启Sublime Text\n    2)安装好了之后看以看到下面的选项：Preference->Package Control \n![logo1](1.png)\n    3)输入latex，选择 LaTeXTools 进行安装即可\n\n### 2.配置 \n选择 Preferences -> Browse Packages，选择并进入LaTeXTools 文件夹，使用 Sublime Text 3打开LaTeXTools.sublime-settings文件。\n![logo2](2.png)\n修改其中的texpath和sumatra为你的安装路径，并修改distro为texlive。\n![logo3](3.png)\n将builder改为simple。保存后退出即可。\n\n## 四、配置SumatraPDF\n1.修改环境变量PATH \n将 SumatraPDF 的主程序目录添加到环境变量PATH，这一步很重要，否则下一步会无法进行。 \n右击我的电脑，选择属性，点击左侧的高级系统设置，再点击下方的环境变量。双击环境变量PATH，在后面加入输入SumatraPDF主目录确定即。<br>\n2.配置 SumatraPDF 反向搜索 \n打开命令提示符，执行以下命令：（将安装的sublime其中的安装路径替换成你实际的安装路径）\n<u>sumatrapdf.exe -inverse-search \"\\\"D:\\Sublime\\Sublime Text 3\\sublime_text.exe\\\" \\\"%f:%l\\\"</u>\n\n## 五、测试运行\n建立test.tex文件，复制以下内容：\n```javascript\n\\documentclass{article} \n\\author{My Name} \n\\title{The Title} \n\\begin{document} \n\\maketitle \nhello, world % This is comment \n\\end{document} \n\\end{document}\n```\n\n## 参考\nhttp://blog.csdn.net/qazxswed807/article/details/51234834\n","source":"_posts/2018-01-14-texlive-Sublime-Text-3.md","raw":"---\ntitle: 使用sublime编写latex(texlive)\ndate: 2018-01-14\ncategories: blog\ntags: [texlive,sublime,latex]\n---\n\n## 一、下载地址\n* TeXLive下载地址：\nhttp://ftp.math.purdue.edu/mirrors/ctan.org/systems/texlive/Images/texlive.iso\n* Sublime下载地址：\nhttp://sw.bos.baidu.com/sw-search-sp/software/6613504ddd3db/Sublime_Text_3.3126_Setup.exe\n* Sumatra PDF下载地址：\nhttp://sw.bos.baidu.com/sw-search-sp/software/0ebcac412a851/SumatraPDF-3.1.2.0-64-install.exe\n\n\n## 二、主要流程\n\n1. 先安装TeXLive（安装教程：http://jingyan.baidu.com/article/f0e83a2588f6d022e5910128.html）\n\n<!-- more -->\n2. 再安装sublime，再进入sublime根据下面教程安装LaTeXTools插件\n3. 最后安装Sumatra PDF，记住安装路径\n4. 然后根据下面的教程进入sublime里面配置一下\n\n## 三、安装LaTeXTools\n### 1. 安装Package Control\n    1)通过组合键 CTRL + `或是通过菜单命令View -> Show Console来打开控制台，然后将下面的代码输入，按enter即可。（输入的代码网上查找）重启Sublime Text\n    2)安装好了之后看以看到下面的选项：Preference->Package Control \n![logo1](1.png)\n    3)输入latex，选择 LaTeXTools 进行安装即可\n\n### 2.配置 \n选择 Preferences -> Browse Packages，选择并进入LaTeXTools 文件夹，使用 Sublime Text 3打开LaTeXTools.sublime-settings文件。\n![logo2](2.png)\n修改其中的texpath和sumatra为你的安装路径，并修改distro为texlive。\n![logo3](3.png)\n将builder改为simple。保存后退出即可。\n\n## 四、配置SumatraPDF\n1.修改环境变量PATH \n将 SumatraPDF 的主程序目录添加到环境变量PATH，这一步很重要，否则下一步会无法进行。 \n右击我的电脑，选择属性，点击左侧的高级系统设置，再点击下方的环境变量。双击环境变量PATH，在后面加入输入SumatraPDF主目录确定即。<br>\n2.配置 SumatraPDF 反向搜索 \n打开命令提示符，执行以下命令：（将安装的sublime其中的安装路径替换成你实际的安装路径）\n<u>sumatrapdf.exe -inverse-search \"\\\"D:\\Sublime\\Sublime Text 3\\sublime_text.exe\\\" \\\"%f:%l\\\"</u>\n\n## 五、测试运行\n建立test.tex文件，复制以下内容：\n```javascript\n\\documentclass{article} \n\\author{My Name} \n\\title{The Title} \n\\begin{document} \n\\maketitle \nhello, world % This is comment \n\\end{document} \n\\end{document}\n```\n\n## 参考\nhttp://blog.csdn.net/qazxswed807/article/details/51234834\n","slug":"2018-01-14-texlive-Sublime-Text-3","published":1,"updated":"2018-01-14T07:00:33.719Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcekhg0a0005d8ninven6vp9","content":"<h2 id=\"一、下载地址\"><a href=\"#一、下载地址\" class=\"headerlink\" title=\"一、下载地址\"></a>一、下载地址</h2><ul>\n<li>TeXLive下载地址：<br><a href=\"http://ftp.math.purdue.edu/mirrors/ctan.org/systems/texlive/Images/texlive.iso\" target=\"_blank\" rel=\"noopener\">http://ftp.math.purdue.edu/mirrors/ctan.org/systems/texlive/Images/texlive.iso</a></li>\n<li>Sublime下载地址：<br><a href=\"http://sw.bos.baidu.com/sw-search-sp/software/6613504ddd3db/Sublime_Text_3.3126_Setup.exe\" target=\"_blank\" rel=\"noopener\">http://sw.bos.baidu.com/sw-search-sp/software/6613504ddd3db/Sublime_Text_3.3126_Setup.exe</a></li>\n<li>Sumatra PDF下载地址：<br><a href=\"http://sw.bos.baidu.com/sw-search-sp/software/0ebcac412a851/SumatraPDF-3.1.2.0-64-install.exe\" target=\"_blank\" rel=\"noopener\">http://sw.bos.baidu.com/sw-search-sp/software/0ebcac412a851/SumatraPDF-3.1.2.0-64-install.exe</a></li>\n</ul>\n<h2 id=\"二、主要流程\"><a href=\"#二、主要流程\" class=\"headerlink\" title=\"二、主要流程\"></a>二、主要流程</h2><ol>\n<li>先安装TeXLive（安装教程：<a href=\"http://jingyan.baidu.com/article/f0e83a2588f6d022e5910128.html）\" target=\"_blank\" rel=\"noopener\">http://jingyan.baidu.com/article/f0e83a2588f6d022e5910128.html）</a></li>\n</ol>\n<a id=\"more\"></a>\n<ol>\n<li>再安装sublime，再进入sublime根据下面教程安装LaTeXTools插件</li>\n<li>最后安装Sumatra PDF，记住安装路径</li>\n<li>然后根据下面的教程进入sublime里面配置一下</li>\n</ol>\n<h2 id=\"三、安装LaTeXTools\"><a href=\"#三、安装LaTeXTools\" class=\"headerlink\" title=\"三、安装LaTeXTools\"></a>三、安装LaTeXTools</h2><h3 id=\"1-安装Package-Control\"><a href=\"#1-安装Package-Control\" class=\"headerlink\" title=\"1. 安装Package Control\"></a>1. 安装Package Control</h3><pre><code>1)通过组合键 CTRL + `或是通过菜单命令View -&gt; Show Console来打开控制台，然后将下面的代码输入，按enter即可。（输入的代码网上查找）重启Sublime Text\n2)安装好了之后看以看到下面的选项：Preference-&gt;Package Control \n</code></pre><p><img src=\"1.png\" alt=\"logo1\"><br>    3)输入latex，选择 LaTeXTools 进行安装即可</p>\n<h3 id=\"2-配置\"><a href=\"#2-配置\" class=\"headerlink\" title=\"2.配置\"></a>2.配置</h3><p>选择 Preferences -&gt; Browse Packages，选择并进入LaTeXTools 文件夹，使用 Sublime Text 3打开LaTeXTools.sublime-settings文件。<br><img src=\"2.png\" alt=\"logo2\"><br>修改其中的texpath和sumatra为你的安装路径，并修改distro为texlive。<br><img src=\"3.png\" alt=\"logo3\"><br>将builder改为simple。保存后退出即可。</p>\n<h2 id=\"四、配置SumatraPDF\"><a href=\"#四、配置SumatraPDF\" class=\"headerlink\" title=\"四、配置SumatraPDF\"></a>四、配置SumatraPDF</h2><p>1.修改环境变量PATH<br>将 SumatraPDF 的主程序目录添加到环境变量PATH，这一步很重要，否则下一步会无法进行。<br>右击我的电脑，选择属性，点击左侧的高级系统设置，再点击下方的环境变量。双击环境变量PATH，在后面加入输入SumatraPDF主目录确定即。<br><br>2.配置 SumatraPDF 反向搜索<br>打开命令提示符，执行以下命令：（将安装的sublime其中的安装路径替换成你实际的安装路径）<br><u>sumatrapdf.exe -inverse-search “\\”D:\\Sublime\\Sublime Text 3\\sublime_text.exe\\” \\”%f:%l\\”</u></p>\n<h2 id=\"五、测试运行\"><a href=\"#五、测试运行\" class=\"headerlink\" title=\"五、测试运行\"></a>五、测试运行</h2><p>建立test.tex文件，复制以下内容：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\documentclass&#123;article&#125; </span><br><span class=\"line\">\\author&#123;My Name&#125; </span><br><span class=\"line\">\\title&#123;The Title&#125; </span><br><span class=\"line\">\\begin&#123;<span class=\"built_in\">document</span>&#125; </span><br><span class=\"line\">\\maketitle </span><br><span class=\"line\">hello, world % This is comment </span><br><span class=\"line\">\\end&#123;<span class=\"built_in\">document</span>&#125; </span><br><span class=\"line\">\\end&#123;<span class=\"built_in\">document</span>&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"http://blog.csdn.net/qazxswed807/article/details/51234834\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/qazxswed807/article/details/51234834</a></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"一、下载地址\"><a href=\"#一、下载地址\" class=\"headerlink\" title=\"一、下载地址\"></a>一、下载地址</h2><ul>\n<li>TeXLive下载地址：<br><a href=\"http://ftp.math.purdue.edu/mirrors/ctan.org/systems/texlive/Images/texlive.iso\" target=\"_blank\" rel=\"noopener\">http://ftp.math.purdue.edu/mirrors/ctan.org/systems/texlive/Images/texlive.iso</a></li>\n<li>Sublime下载地址：<br><a href=\"http://sw.bos.baidu.com/sw-search-sp/software/6613504ddd3db/Sublime_Text_3.3126_Setup.exe\" target=\"_blank\" rel=\"noopener\">http://sw.bos.baidu.com/sw-search-sp/software/6613504ddd3db/Sublime_Text_3.3126_Setup.exe</a></li>\n<li>Sumatra PDF下载地址：<br><a href=\"http://sw.bos.baidu.com/sw-search-sp/software/0ebcac412a851/SumatraPDF-3.1.2.0-64-install.exe\" target=\"_blank\" rel=\"noopener\">http://sw.bos.baidu.com/sw-search-sp/software/0ebcac412a851/SumatraPDF-3.1.2.0-64-install.exe</a></li>\n</ul>\n<h2 id=\"二、主要流程\"><a href=\"#二、主要流程\" class=\"headerlink\" title=\"二、主要流程\"></a>二、主要流程</h2><ol>\n<li>先安装TeXLive（安装教程：<a href=\"http://jingyan.baidu.com/article/f0e83a2588f6d022e5910128.html）\" target=\"_blank\" rel=\"noopener\">http://jingyan.baidu.com/article/f0e83a2588f6d022e5910128.html）</a></li>\n</ol>","more":"<ol>\n<li>再安装sublime，再进入sublime根据下面教程安装LaTeXTools插件</li>\n<li>最后安装Sumatra PDF，记住安装路径</li>\n<li>然后根据下面的教程进入sublime里面配置一下</li>\n</ol>\n<h2 id=\"三、安装LaTeXTools\"><a href=\"#三、安装LaTeXTools\" class=\"headerlink\" title=\"三、安装LaTeXTools\"></a>三、安装LaTeXTools</h2><h3 id=\"1-安装Package-Control\"><a href=\"#1-安装Package-Control\" class=\"headerlink\" title=\"1. 安装Package Control\"></a>1. 安装Package Control</h3><pre><code>1)通过组合键 CTRL + `或是通过菜单命令View -&gt; Show Console来打开控制台，然后将下面的代码输入，按enter即可。（输入的代码网上查找）重启Sublime Text\n2)安装好了之后看以看到下面的选项：Preference-&gt;Package Control \n</code></pre><p><img src=\"1.png\" alt=\"logo1\"><br>    3)输入latex，选择 LaTeXTools 进行安装即可</p>\n<h3 id=\"2-配置\"><a href=\"#2-配置\" class=\"headerlink\" title=\"2.配置\"></a>2.配置</h3><p>选择 Preferences -&gt; Browse Packages，选择并进入LaTeXTools 文件夹，使用 Sublime Text 3打开LaTeXTools.sublime-settings文件。<br><img src=\"2.png\" alt=\"logo2\"><br>修改其中的texpath和sumatra为你的安装路径，并修改distro为texlive。<br><img src=\"3.png\" alt=\"logo3\"><br>将builder改为simple。保存后退出即可。</p>\n<h2 id=\"四、配置SumatraPDF\"><a href=\"#四、配置SumatraPDF\" class=\"headerlink\" title=\"四、配置SumatraPDF\"></a>四、配置SumatraPDF</h2><p>1.修改环境变量PATH<br>将 SumatraPDF 的主程序目录添加到环境变量PATH，这一步很重要，否则下一步会无法进行。<br>右击我的电脑，选择属性，点击左侧的高级系统设置，再点击下方的环境变量。双击环境变量PATH，在后面加入输入SumatraPDF主目录确定即。<br><br>2.配置 SumatraPDF 反向搜索<br>打开命令提示符，执行以下命令：（将安装的sublime其中的安装路径替换成你实际的安装路径）<br><u>sumatrapdf.exe -inverse-search “\\”D:\\Sublime\\Sublime Text 3\\sublime_text.exe\\” \\”%f:%l\\”</u></p>\n<h2 id=\"五、测试运行\"><a href=\"#五、测试运行\" class=\"headerlink\" title=\"五、测试运行\"></a>五、测试运行</h2><p>建立test.tex文件，复制以下内容：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\documentclass&#123;article&#125; </span><br><span class=\"line\">\\author&#123;My Name&#125; </span><br><span class=\"line\">\\title&#123;The Title&#125; </span><br><span class=\"line\">\\begin&#123;<span class=\"built_in\">document</span>&#125; </span><br><span class=\"line\">\\maketitle </span><br><span class=\"line\">hello, world % This is comment </span><br><span class=\"line\">\\end&#123;<span class=\"built_in\">document</span>&#125; </span><br><span class=\"line\">\\end&#123;<span class=\"built_in\">document</span>&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"http://blog.csdn.net/qazxswed807/article/details/51234834\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/qazxswed807/article/details/51234834</a></p>"},{"title":"Hexo+Github搭建博客后的保存迁移","date":"2018-01-13T16:00:00.000Z","_content":"\n## 搭建教程\n\n参考使用hexo+github搭建免费个人博客详细教程\nhttps://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html\n按以上教程完成之后，需要保存迁移，以便在更换电脑时依然能够使用，可使用如下方法。\n\n## 一、创建流程\n\n1. 在github上创建分支hexo，<font style=\"color:red\">需要两个分支，一个master用以运行静态文件，一个hexo用以存放源码</font>\n<!-- more -->\n2. clone github上原有仓库到本地，只留下.git文件夹\n3. 将原来的xxx.github.io所有内容放入刚拷贝的本地仓库中\n4. 进入拷贝下的仓库主目录，进行操作并提交，最终达到master分支存在静态文件，hexo分支存放源码\n5. 当需要在其它电脑上修改时，使用git拷贝到那台电脑本地，进入目录后通过git和hexo命令分别提交源码和生成的静态文件\n\n## 二、主要步骤\n1. 在github上创建一个分支hexo，至此，就拥有了两个分支master和hexo\n2. 使用<b>git clone git@github.com:Acheron2012/Acheron2012.github.io.git</b>拷贝到本地仓库\n3. 进入刚拷贝的仓库目录，使用<b>git checkout hexo</b>命令切换到hexo分支（使用git branch查看当前所处分支）\n4. 删除该目录下除.git文件夹外的所有文件\n5. 再进入本地原先的git文件夹（即按《使用hexo+github搭建免费个人博客详细教程》创建的Acheron2012.github.io文件夹），ctrl+a全选所有内容并拷贝到第3步的仓库文件夹中\n6. 进入刚拷贝完成的文件夹，打开.gitigonre文件，并删除里面所有内容（这一步是为保证提交源码到hexo分支做准备，若不删除，源码内容会提交不全）\n7. 检查<i>_config.yml</i>文件，确定其中的deploy参数为master（保证hexo部署时只提交用以运行的静态页面，由默认的master分支运行静态文件，可在setting中设置运行分支）\n8. 依次执行<b>git add .</b>、<b>git commit -m \"...\"</b>、<b>git push blog hexo</b>提交源码到hexo分支（若无blog项目，则先通过<b>git remote add blog git@github.com:Acheron2012/Acheron2012.github.io.git</b>添加项目）\n9. 执行<b>hexo g</b>生成网站并用<b>hexo d</b>部署到GitHub上\n 如此，在GitHub上的https://github.com/Acheron2012/Acheron2012.github.io 仓库就有两个分支，一个hexo分支用来存放网站的原始文件，一个master分支用来存放生成的静态网页。\n\n## 三、日常改动 \n1.在其它电脑上想修改博客时，方法如下。\n- 安装git (https://git-scm.com/downloads)\n- node.js (http://nodejs.cn/download/)\n- hexo (使用npm install -g hexo)\n2.使用<b>git clone git@github.com:Acheron2012/Acheron2012.github.io.git</b>拷贝到本地仓库\n3.使用<b>git checkout hexo</b>命令切换到hexo分支（使用git branch查看当前所处分支）\n4.在修改代码后，先使用<b>hexo g</b>生成网站修改结果，并依次执行<b>git add .</b>、<b>git commit -m \"...\"</b>、<b>git push blog hexo</b>提交源码到github上的hexo分支，并通过<b>hexo d</b>部署到github上的master分支（为保证突发情况，若死机或断电时提交顺序不会有问题，应先执行git操作，再执行hexo操作。\n\n## 注：git最后提交命令为<font style=\"color:red\">git push blog hexo</font>，是<b>hexo分支</b>，不要弄错了\n\n## 参考\nhttps://www.zhihu.com/question/21193762/answer/79109280\n","source":"_posts/2018-01-14-hexo-github-storage.md","raw":"---\ntitle: Hexo+Github搭建博客后的保存迁移\ndate: 2018-01-14\ncategories: blog\ntags: [hexo,github]\n---\n\n## 搭建教程\n\n参考使用hexo+github搭建免费个人博客详细教程\nhttps://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html\n按以上教程完成之后，需要保存迁移，以便在更换电脑时依然能够使用，可使用如下方法。\n\n## 一、创建流程\n\n1. 在github上创建分支hexo，<font style=\"color:red\">需要两个分支，一个master用以运行静态文件，一个hexo用以存放源码</font>\n<!-- more -->\n2. clone github上原有仓库到本地，只留下.git文件夹\n3. 将原来的xxx.github.io所有内容放入刚拷贝的本地仓库中\n4. 进入拷贝下的仓库主目录，进行操作并提交，最终达到master分支存在静态文件，hexo分支存放源码\n5. 当需要在其它电脑上修改时，使用git拷贝到那台电脑本地，进入目录后通过git和hexo命令分别提交源码和生成的静态文件\n\n## 二、主要步骤\n1. 在github上创建一个分支hexo，至此，就拥有了两个分支master和hexo\n2. 使用<b>git clone git@github.com:Acheron2012/Acheron2012.github.io.git</b>拷贝到本地仓库\n3. 进入刚拷贝的仓库目录，使用<b>git checkout hexo</b>命令切换到hexo分支（使用git branch查看当前所处分支）\n4. 删除该目录下除.git文件夹外的所有文件\n5. 再进入本地原先的git文件夹（即按《使用hexo+github搭建免费个人博客详细教程》创建的Acheron2012.github.io文件夹），ctrl+a全选所有内容并拷贝到第3步的仓库文件夹中\n6. 进入刚拷贝完成的文件夹，打开.gitigonre文件，并删除里面所有内容（这一步是为保证提交源码到hexo分支做准备，若不删除，源码内容会提交不全）\n7. 检查<i>_config.yml</i>文件，确定其中的deploy参数为master（保证hexo部署时只提交用以运行的静态页面，由默认的master分支运行静态文件，可在setting中设置运行分支）\n8. 依次执行<b>git add .</b>、<b>git commit -m \"...\"</b>、<b>git push blog hexo</b>提交源码到hexo分支（若无blog项目，则先通过<b>git remote add blog git@github.com:Acheron2012/Acheron2012.github.io.git</b>添加项目）\n9. 执行<b>hexo g</b>生成网站并用<b>hexo d</b>部署到GitHub上\n 如此，在GitHub上的https://github.com/Acheron2012/Acheron2012.github.io 仓库就有两个分支，一个hexo分支用来存放网站的原始文件，一个master分支用来存放生成的静态网页。\n\n## 三、日常改动 \n1.在其它电脑上想修改博客时，方法如下。\n- 安装git (https://git-scm.com/downloads)\n- node.js (http://nodejs.cn/download/)\n- hexo (使用npm install -g hexo)\n2.使用<b>git clone git@github.com:Acheron2012/Acheron2012.github.io.git</b>拷贝到本地仓库\n3.使用<b>git checkout hexo</b>命令切换到hexo分支（使用git branch查看当前所处分支）\n4.在修改代码后，先使用<b>hexo g</b>生成网站修改结果，并依次执行<b>git add .</b>、<b>git commit -m \"...\"</b>、<b>git push blog hexo</b>提交源码到github上的hexo分支，并通过<b>hexo d</b>部署到github上的master分支（为保证突发情况，若死机或断电时提交顺序不会有问题，应先执行git操作，再执行hexo操作。\n\n## 注：git最后提交命令为<font style=\"color:red\">git push blog hexo</font>，是<b>hexo分支</b>，不要弄错了\n\n## 参考\nhttps://www.zhihu.com/question/21193762/answer/79109280\n","slug":"2018-01-14-hexo-github-storage","published":1,"updated":"2018-01-14T09:19:22.300Z","_id":"cjcekhg0c0006d8nih7lvaa0f","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"搭建教程\"><a href=\"#搭建教程\" class=\"headerlink\" title=\"搭建教程\"></a>搭建教程</h2><p>参考使用hexo+github搭建免费个人博客详细教程<br><a href=\"https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html</a><br>按以上教程完成之后，需要保存迁移，以便在更换电脑时依然能够使用，可使用如下方法。</p>\n<h2 id=\"一、创建流程\"><a href=\"#一、创建流程\" class=\"headerlink\" title=\"一、创建流程\"></a>一、创建流程</h2><ol>\n<li>在github上创建分支hexo，<font style=\"color:red\">需要两个分支，一个master用以运行静态文件，一个hexo用以存放源码</font><a id=\"more\"></a></li>\n<li>clone github上原有仓库到本地，只留下.git文件夹</li>\n<li>将原来的xxx.github.io所有内容放入刚拷贝的本地仓库中</li>\n<li>进入拷贝下的仓库主目录，进行操作并提交，最终达到master分支存在静态文件，hexo分支存放源码</li>\n<li>当需要在其它电脑上修改时，使用git拷贝到那台电脑本地，进入目录后通过git和hexo命令分别提交源码和生成的静态文件</li>\n</ol>\n<h2 id=\"二、主要步骤\"><a href=\"#二、主要步骤\" class=\"headerlink\" title=\"二、主要步骤\"></a>二、主要步骤</h2><ol>\n<li>在github上创建一个分支hexo，至此，就拥有了两个分支master和hexo</li>\n<li>使用<b>git clone git@github.com:Acheron2012/Acheron2012.github.io.git</b>拷贝到本地仓库</li>\n<li>进入刚拷贝的仓库目录，使用<b>git checkout hexo</b>命令切换到hexo分支（使用git branch查看当前所处分支）</li>\n<li>删除该目录下除.git文件夹外的所有文件</li>\n<li>再进入本地原先的git文件夹（即按《使用hexo+github搭建免费个人博客详细教程》创建的Acheron2012.github.io文件夹），ctrl+a全选所有内容并拷贝到第3步的仓库文件夹中</li>\n<li>进入刚拷贝完成的文件夹，打开.gitigonre文件，并删除里面所有内容（这一步是为保证提交源码到hexo分支做准备，若不删除，源码内容会提交不全）</li>\n<li>检查<i>_config.yml</i>文件，确定其中的deploy参数为master（保证hexo部署时只提交用以运行的静态页面，由默认的master分支运行静态文件，可在setting中设置运行分支）</li>\n<li>依次执行<b>git add .</b>、<b>git commit -m “…”</b>、<b>git push blog hexo</b>提交源码到hexo分支（若无blog项目，则先通过<b>git remote add blog git@github.com:Acheron2012/Acheron2012.github.io.git</b>添加项目）</li>\n<li>执行<b>hexo g</b>生成网站并用<b>hexo d</b>部署到GitHub上<br>如此，在GitHub上的<a href=\"https://github.com/Acheron2012/Acheron2012.github.io\" target=\"_blank\" rel=\"noopener\">https://github.com/Acheron2012/Acheron2012.github.io</a> 仓库就有两个分支，一个hexo分支用来存放网站的原始文件，一个master分支用来存放生成的静态网页。</li>\n</ol>\n<h2 id=\"三、日常改动\"><a href=\"#三、日常改动\" class=\"headerlink\" title=\"三、日常改动\"></a>三、日常改动</h2><p>1.在其它电脑上想修改博客时，方法如下。</p>\n<ul>\n<li>安装git (<a href=\"https://git-scm.com/downloads\" target=\"_blank\" rel=\"noopener\">https://git-scm.com/downloads</a>)</li>\n<li>node.js (<a href=\"http://nodejs.cn/download/\" target=\"_blank\" rel=\"noopener\">http://nodejs.cn/download/</a>)</li>\n<li>hexo (使用npm install -g hexo)<br>2.使用<b>git clone git@github.com:Acheron2012/Acheron2012.github.io.git</b>拷贝到本地仓库<br>3.使用<b>git checkout hexo</b>命令切换到hexo分支（使用git branch查看当前所处分支）<br>4.在修改代码后，先使用<b>hexo g</b>生成网站修改结果，并依次执行<b>git add .</b>、<b>git commit -m “…”</b>、<b>git push blog hexo</b>提交源码到github上的hexo分支，并通过<b>hexo d</b>部署到github上的master分支（为保证突发情况，若死机或断电时提交顺序不会有问题，应先执行git操作，再执行hexo操作。</li>\n</ul>\n<h2 id=\"注：git最后提交命令为git-push-blog-hexo，是hexo分支，不要弄错了\"><a href=\"#注：git最后提交命令为git-push-blog-hexo，是hexo分支，不要弄错了\" class=\"headerlink\" title=\"注：git最后提交命令为git push blog hexo，是hexo分支，不要弄错了\"></a>注：git最后提交命令为<font style=\"color:red\">git push blog hexo</font>，是<b>hexo分支</b>，不要弄错了</h2><h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://www.zhihu.com/question/21193762/answer/79109280\" target=\"_blank\" rel=\"noopener\">https://www.zhihu.com/question/21193762/answer/79109280</a></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"搭建教程\"><a href=\"#搭建教程\" class=\"headerlink\" title=\"搭建教程\"></a>搭建教程</h2><p>参考使用hexo+github搭建免费个人博客详细教程<br><a href=\"https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html</a><br>按以上教程完成之后，需要保存迁移，以便在更换电脑时依然能够使用，可使用如下方法。</p>\n<h2 id=\"一、创建流程\"><a href=\"#一、创建流程\" class=\"headerlink\" title=\"一、创建流程\"></a>一、创建流程</h2><ol>\n<li>在github上创建分支hexo，<font style=\"color:red\">需要两个分支，一个master用以运行静态文件，一个hexo用以存放源码</font>","more":"</li>\n<li>clone github上原有仓库到本地，只留下.git文件夹</li>\n<li>将原来的xxx.github.io所有内容放入刚拷贝的本地仓库中</li>\n<li>进入拷贝下的仓库主目录，进行操作并提交，最终达到master分支存在静态文件，hexo分支存放源码</li>\n<li>当需要在其它电脑上修改时，使用git拷贝到那台电脑本地，进入目录后通过git和hexo命令分别提交源码和生成的静态文件</li>\n</ol>\n<h2 id=\"二、主要步骤\"><a href=\"#二、主要步骤\" class=\"headerlink\" title=\"二、主要步骤\"></a>二、主要步骤</h2><ol>\n<li>在github上创建一个分支hexo，至此，就拥有了两个分支master和hexo</li>\n<li>使用<b>git clone git@github.com:Acheron2012/Acheron2012.github.io.git</b>拷贝到本地仓库</li>\n<li>进入刚拷贝的仓库目录，使用<b>git checkout hexo</b>命令切换到hexo分支（使用git branch查看当前所处分支）</li>\n<li>删除该目录下除.git文件夹外的所有文件</li>\n<li>再进入本地原先的git文件夹（即按《使用hexo+github搭建免费个人博客详细教程》创建的Acheron2012.github.io文件夹），ctrl+a全选所有内容并拷贝到第3步的仓库文件夹中</li>\n<li>进入刚拷贝完成的文件夹，打开.gitigonre文件，并删除里面所有内容（这一步是为保证提交源码到hexo分支做准备，若不删除，源码内容会提交不全）</li>\n<li>检查<i>_config.yml</i>文件，确定其中的deploy参数为master（保证hexo部署时只提交用以运行的静态页面，由默认的master分支运行静态文件，可在setting中设置运行分支）</li>\n<li>依次执行<b>git add .</b>、<b>git commit -m “…”</b>、<b>git push blog hexo</b>提交源码到hexo分支（若无blog项目，则先通过<b>git remote add blog git@github.com:Acheron2012/Acheron2012.github.io.git</b>添加项目）</li>\n<li>执行<b>hexo g</b>生成网站并用<b>hexo d</b>部署到GitHub上<br>如此，在GitHub上的<a href=\"https://github.com/Acheron2012/Acheron2012.github.io\" target=\"_blank\" rel=\"noopener\">https://github.com/Acheron2012/Acheron2012.github.io</a> 仓库就有两个分支，一个hexo分支用来存放网站的原始文件，一个master分支用来存放生成的静态网页。</li>\n</ol>\n<h2 id=\"三、日常改动\"><a href=\"#三、日常改动\" class=\"headerlink\" title=\"三、日常改动\"></a>三、日常改动</h2><p>1.在其它电脑上想修改博客时，方法如下。</p>\n<ul>\n<li>安装git (<a href=\"https://git-scm.com/downloads\" target=\"_blank\" rel=\"noopener\">https://git-scm.com/downloads</a>)</li>\n<li>node.js (<a href=\"http://nodejs.cn/download/\" target=\"_blank\" rel=\"noopener\">http://nodejs.cn/download/</a>)</li>\n<li>hexo (使用npm install -g hexo)<br>2.使用<b>git clone git@github.com:Acheron2012/Acheron2012.github.io.git</b>拷贝到本地仓库<br>3.使用<b>git checkout hexo</b>命令切换到hexo分支（使用git branch查看当前所处分支）<br>4.在修改代码后，先使用<b>hexo g</b>生成网站修改结果，并依次执行<b>git add .</b>、<b>git commit -m “…”</b>、<b>git push blog hexo</b>提交源码到github上的hexo分支，并通过<b>hexo d</b>部署到github上的master分支（为保证突发情况，若死机或断电时提交顺序不会有问题，应先执行git操作，再执行hexo操作。</li>\n</ul>\n<h2 id=\"注：git最后提交命令为git-push-blog-hexo，是hexo分支，不要弄错了\"><a href=\"#注：git最后提交命令为git-push-blog-hexo，是hexo分支，不要弄错了\" class=\"headerlink\" title=\"注：git最后提交命令为git push blog hexo，是hexo分支，不要弄错了\"></a>注：git最后提交命令为<font style=\"color:red\">git push blog hexo</font>，是<b>hexo分支</b>，不要弄错了</h2><h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://www.zhihu.com/question/21193762/answer/79109280\" target=\"_blank\" rel=\"noopener\">https://www.zhihu.com/question/21193762/answer/79109280</a></p>"}],"PostAsset":[{"_id":"source/_posts/2018-01-14-texlive-Sublime-Text-3/1.png","slug":"1.png","post":"cjcekhg0a0005d8ninven6vp9","modified":0,"renderable":0},{"_id":"source/_posts/2018-01-14-texlive-Sublime-Text-3/2.png","slug":"2.png","post":"cjcekhg0a0005d8ninven6vp9","modified":0,"renderable":0},{"_id":"source/_posts/2018-01-14-texlive-Sublime-Text-3/3.png","slug":"3.png","post":"cjcekhg0a0005d8ninven6vp9","modified":0,"renderable":0},{"_id":"source/_posts/2018-01-12-windows上-tensorflow-gpu/clipboard1.png","slug":"clipboard1.png","post":"cjcekhfzw0001d8nir02cmyal","modified":0,"renderable":0},{"_id":"source/_posts/2018-01-12-windows上-tensorflow-gpu/clipboard2.png","slug":"clipboard2.png","post":"cjcekhfzw0001d8nir02cmyal","modified":0,"renderable":0},{"_id":"source/_posts/2018-01-12-windows上-tensorflow-gpu/clipboard3.png","slug":"clipboard3.png","post":"cjcekhfzw0001d8nir02cmyal","modified":0,"renderable":0},{"_id":"source/_posts/2018-01-12-windows上-tensorflow-gpu/clipboard4.png","slug":"clipboard4.png","post":"cjcekhfzw0001d8nir02cmyal","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cjcekhg0c0006d8nih7lvaa0f","category_id":"cjcekhg060003d8niwdwjurbl","_id":"cjcekhg0g0009d8nisek6vsy2"},{"post_id":"cjcekhfzw0001d8nir02cmyal","category_id":"cjcekhg060003d8niwdwjurbl","_id":"cjcekhg0i000cd8nihblhmh6x"},{"post_id":"cjcekhg020002d8niuml05p0t","category_id":"cjcekhg060003d8niwdwjurbl","_id":"cjcekhg0j000dd8nigqigpf3c"},{"post_id":"cjcekhg0a0005d8ninven6vp9","category_id":"cjcekhg060003d8niwdwjurbl","_id":"cjcekhg0l000gd8ni0xnoo3sp"}],"PostTag":[{"post_id":"cjcekhfzw0001d8nir02cmyal","tag_id":"cjcekhg090004d8nib9u14fzt","_id":"cjcekhg0k000fd8niz30mkdgc"},{"post_id":"cjcekhfzw0001d8nir02cmyal","tag_id":"cjcekhg0e0008d8nivpxiyg1a","_id":"cjcekhg0l000hd8nissnx8fid"},{"post_id":"cjcekhfzw0001d8nir02cmyal","tag_id":"cjcekhg0h000bd8nicmukzrm2","_id":"cjcekhg0m000jd8ni3v885jvt"},{"post_id":"cjcekhg020002d8niuml05p0t","tag_id":"cjcekhg0k000ed8niea7ch0b3","_id":"cjcekhg0n000ld8niptfbephf"},{"post_id":"cjcekhg020002d8niuml05p0t","tag_id":"cjcekhg0m000id8ni8itpy6yl","_id":"cjcekhg0o000md8nihnbqui6t"},{"post_id":"cjcekhg0a0005d8ninven6vp9","tag_id":"cjcekhg0n000kd8ni3bjbeqd3","_id":"cjcekhg0q000qd8nickr4d1d1"},{"post_id":"cjcekhg0a0005d8ninven6vp9","tag_id":"cjcekhg0o000nd8nizx61q19i","_id":"cjcekhg0r000rd8ni8pct3akg"},{"post_id":"cjcekhg0a0005d8ninven6vp9","tag_id":"cjcekhg0p000od8nik0yqctsy","_id":"cjcekhg0s000td8niwgzt2ek4"},{"post_id":"cjcekhg0c0006d8nih7lvaa0f","tag_id":"cjcekhg0q000pd8niv4jstg7g","_id":"cjcekhg0s000ud8nih3mk1xoo"},{"post_id":"cjcekhg0c0006d8nih7lvaa0f","tag_id":"cjcekhg0r000sd8nig023ic8l","_id":"cjcekhg0t000vd8nid0hxg507"}],"Tag":[{"name":"windows","_id":"cjcekhg090004d8nib9u14fzt"},{"name":"tensorflow","_id":"cjcekhg0e0008d8nivpxiyg1a"},{"name":"gpu","_id":"cjcekhg0h000bd8nicmukzrm2"},{"name":"mysql","_id":"cjcekhg0k000ed8niea7ch0b3"},{"name":"外网访问","_id":"cjcekhg0m000id8ni8itpy6yl"},{"name":"texlive","_id":"cjcekhg0n000kd8ni3bjbeqd3"},{"name":"sublime","_id":"cjcekhg0o000nd8nizx61q19i"},{"name":"latex","_id":"cjcekhg0p000od8nik0yqctsy"},{"name":"hexo","_id":"cjcekhg0q000pd8niv4jstg7g"},{"name":"github","_id":"cjcekhg0r000sd8nig023ic8l"}]}}